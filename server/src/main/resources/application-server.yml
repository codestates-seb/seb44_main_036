cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY}
      secretKey: ${AWS_SECRET_KEY}
    s3:
      bucket: ${BUCKET}
    region:
      static: ap-northeast-2
    stack:
      auto: 'false'
aws:
  paramstore:
    enabled: true
    prefix: /spring-boot-aws
    profile-separator: _
    name: cloud-parameter-store

spring:
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 2MB
  config:
    import: 'aws-parameterstore:'
  datasource:
    url: jdbc:mysql://${RDS_ENDPOINT}:3306/mifunding?serverTimezone=Asia/Seoul&useSSL=false&characterEncoding=UTF-8
    username: root
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      data-locations: classpath*:db/data.sql
      mode: never
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${G_CLIENT_ID}
            clientSecret: ${G_CLIENT_SECRET}
            scope:
              - email
              - profile
logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG
server:
  servlet:
    encoding:
      force-response: true
mail:
  address:
    admin: ${ADMIN}
jwt:
  key: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 40
  refresh-token-expiration-minutes: 420
